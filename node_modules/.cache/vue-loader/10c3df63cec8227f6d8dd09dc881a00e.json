{"remainingRequest":"/Users/meryemisik/Desktop/docread-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/meryemisik/Desktop/docread-front/src/views/About.vue?vue&type=style&index=0&id=039c5b43&scoped=true&lang=css&","dependencies":[{"path":"/Users/meryemisik/Desktop/docread-front/src/views/About.vue","mtime":1656602948398},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1654029587017},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654029594062},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/postcss-loader/src/index.js","mtime":1654029592815},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/cache-loader/dist/cjs.js","mtime":1654029522011},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/vue-loader/lib/index.js","mtime":1654029594062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5yb3V0ZXJBYm91dCB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgouYWJvdXQgewogIGRpc3BsYXk6IGZsZXg7Cn0KCi5pbWdTaG93IHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIHdpZHRoOiA1NjdweDsKICBoZWlnaHQ6IDM1NHB4OwogIGxlZnQ6IDc4NnB4OwogIG1hcmdpbi1sZWZ0OiAxMjBweDsKICB0b3A6IDI4NXB4OwogIGJhY2tncm91bmQ6ICNmM2YzZjM7CiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9CgojaW1hZ2UgewogIHdpZHRoOiA1MDBweDsKICBsZWZ0OiA1MHB4OwogIHRvcDogMjk5cHg7Cn0KCi5OZXdVcGxvYWQgewogIGxlZnQ6IDc4NnB4OwogIG1hcmdpbi1sZWZ0OiA5NzBweDsKICBtYXJnaW4tcmlnaHQ6IDg3cHg7Cn0KCi5vcnRhbGEgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW4tdG9wOiAxNzJweDsKfQoKLmltYWdlIHsKICB3aWR0aDogNThweDsKICBoZWlnaHQ6IDg4cHg7CiAgdG9wOiA3OHB4OwogIG1hcmdpbi1sZWZ0OiAxMTlweDsKICBtYXJnaW4tYm90dG9tOiA2M3B4Owp9Cg=="},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"layout\">\n       <div class=\"row\" style=\"float:right;\">\n      <div class=\"col-12\">\n          <router-link to=\"/logout\" style=\"text-decoration:none\"> Logout </router-link>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\" style=\"margin-bottom: 40px\">\n        <img src=\"../assets/equotalogo.png\" class=\"img-fluid\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"row about\" style=\"display: flex\">\n        \n          <div class=\"col\">\n            <fp-uploader\n              type=\"vertical\"\n              :props=\"files\"\n              @files=\"log($event)\"\n              v-if=\"test === 0\"\n            ></fp-uploader>\n            <div v-else>\n              <img :src=\"files[0].src\" class=\"img-fluid\" style=\"width:500px\"/>\n              <canvas id=\"canvas\" width=\"1000px\" style=\"display:none;\"></canvas> \n            </div>\n          </div>\n\n          <div class=\"col imgShow\" v-if=\"this.sideData == null\"></div>\n          <div v-else class=\"col imgShow\">\n            <h2 class=\"ortala\">{{ this.sideData }}</h2>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\" v-if=\"this.sideData == null\">\n            <fp-button\n              v-if=\"!hideButton\"\n              @click=\"postImg()\"\n              class=\"uploader__button\"\n              iconPosition=\"right\"\n              styles=\"formpro\"\n            >\n              Detect\n            </fp-button>\n            <div\n              v-if=\"hideButton\"\n              style=\"padding: 10px; background: #f1c40f; color: #d35400\"\n            >\n              Loading...\n            </div>\n          </div>\n          <div class=\"col\" v-if=\"this.sideData !== null\">\n            <fp-button\n              @click=\"refresPage()\"\n              iconPosition=\"right\"\n              styles=\"formpro\"\n              class=\"NewUpload\"\n            >\n              New Upload\n            </fp-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport index from \"../components/ui-kit/Uploader/index\";\n\nexport default {\n  data() {\n    return {\n      sideData: null,\n      test: 0,\n      files: [],\n      file: null,\n      base64Content: null,\n      hideButton: false,\n    };\n  },\n  created() {},\n\n  methods: {\n    refresPage() {\n      this.$router.go();\n    },\n    log(files) {\n      this.test = files.length;\n      this.files = files;\n      this.file = event;\n      let file64 = this.file.target.files[0];\n      let reader = new FileReader();\n      reader.addEventListener(\n          \"load\",\n          () => {\n            let img = new Image();\n            \n            let ctx = canvas.getContext(\"2d\");\n            let canvasCopy = document.createElement(\"canvas\");\n            let copyContext = canvasCopy.getContext(\"2d\");\n            let maxWidth=1000; \n            img.onload = function () {\n              var ratio = 1;\n              if (img.width > maxWidth) ratio = maxWidth / img.width;\n\n              else if (img.height > maxHeight) ratio = maxHeight / img.height;\n\n              canvasCopy.width = img.width;\n               canvasCopy.height = img.height;\n              copyContext.drawImage(img, 0, 0);\n\n              canvas.width = img.width * ratio;\n               canvas.height = img.height * ratio;\n              ctx.drawImage(\n                  canvasCopy,\n                  0,\n                  0,\n                  canvasCopy.width,\n                   canvasCopy.height,\n                  0,\n                  0,\n                  canvas.width,\n                   canvas.height\n              );\n            };\n            const dataUrl = canvas.toDataURL('image/*');\n            // return dataURItoBlob(dataUrl);\n            img.src = reader.result;\n            this.base64Content =img.src;\n          },\n          false\n      );\n      reader.readAsDataURL(file64);\n      return this.file;\n    },\n    postImg() {\n      if (this.file === null) {\n        return;\n      }\n      let formData = new FormData();\n      this.base64Content = canvas.toDataURL(\"image/*\");\n      formData.append(\"base64Content\", this.base64Content);\n      this.hideButton = true;\n      axios\n          .post(\"https://doc-read-api.equota.de/api/upload-image\", formData)\n          .then((res) => {\n            this.sideData = res.data.output.side;\n            this.hideButton = false;\n          })\n          .catch((error) => (this.errors = error.response.data));\n\n    }\n  },\n};\n</script>\n\n<style scoped>\n.routerAbout {\n  text-decoration: none;\n}\n\n.about {\n  display: flex;\n}\n\n.imgShow {\n  box-sizing: border-box;\n  width: 567px;\n  height: 354px;\n  left: 786px;\n  margin-left: 120px;\n  top: 285px;\n  background: #f3f3f3;\n  border: 1px solid #000000;\n  border-radius: 10px;\n}\n\n#image {\n  width: 500px;\n  left: 50px;\n  top: 299px;\n}\n\n.NewUpload {\n  left: 786px;\n  margin-left: 970px;\n  margin-right: 87px;\n}\n\n.ortala {\n  text-align: center;\n  margin-top: 172px;\n}\n\n.image {\n  width: 58px;\n  height: 88px;\n  top: 78px;\n  margin-left: 119px;\n  margin-bottom: 63px;\n}\n</style>"]}]}