{"remainingRequest":"/Users/meryemisik/Desktop/docread-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/meryemisik/Desktop/docread-front/src/components/ui-kit/Uploader/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/meryemisik/Desktop/docread-front/src/components/ui-kit/Uploader/index.vue","mtime":1655885128674},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/cache-loader/dist/cjs.js","mtime":1654029522011},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/babel-loader/lib/index.js","mtime":1655882505362},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/cache-loader/dist/cjs.js","mtime":1654029522011},{"path":"/Users/meryemisik/Desktop/docread-front/node_modules/vue-loader/lib/index.js","mtime":1654029594062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAiLi4vLi4vLi4vYXNzZXRzL3Njc3MvdXBsb2FkZXIuc2NzcyI7CmltcG9ydCBMb2FkZXIgZnJvbSAiLi4vTG9hZGVyL2luZGV4LnZ1ZSI7CmltcG9ydCBmcEljb24gZnJvbSAiLi4vSWNvbi9pbmRleC52dWUiOwppbXBvcnQgQWJvdXQgZnJvbSAnLi4vLi4vLi4vdmlld3MvQWJvdXQnCmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gInF1ZXJ5c3RyaW5nIjsKCmNvbnN0IGRlYm91bmNlID0gcmVxdWlyZSgibG9kYXNoLmRlYm91bmNlIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImZwVXBsb2FkZXIiLAoKCiAgY29tcG9uZW50czogewogICAgTG9hZGVyLAogICAgZnBJY29uLAogICAgQWJvdXQKICB9LAogIHByb3BzOiB7CiAgICBuYW1lOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogInVwbG9hZGVyIiwKICAgIH0sCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogImhvcml6b250YWwiLAogICAgICB2YWxpZGF0b3IodmFsdWUpIHsKICAgICAgICByZXR1cm4gWyJob3Jpem9udGFsIiwgInZlcnRpY2FsIl0uaW5kZXhPZih2YWx1ZSkgIT09IC0xOwogICAgICB9LAogICAgfSwKICAgIGRpc2FibGVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICB9LAogICAgbG9hZGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgfSwKICAgIGxvYWRlclRvdGFsOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMCwKICAgIH0sCiAgICBsb2FkZXJMb2FkZWQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwLAogICAgfSwKICAgIGFjY2VwdDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIqIiwKICAgIH0sCiAgICBhY2NlcHRJbWFnZTp7CiAgICAgIHR5cGU6IHN0cmluZ2lmeSwKICAgICAgZGVmYXVsdDogImltYWdlL2pwZWcJIgogICAgfSwKICAgIG11bHRpcGxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVzOiBbXSwKICAgICAgaW1hZ2VEYXRhOm51bGwsCiAgICAgIGRlYm91bmNlZDogewogICAgICAgIGRyYWdvdmVyOiBkZWJvdW5jZSh0aGlzLmRyYWdvdmVyKSwKICAgICAgICBkcmFnbGVhdmU6IGRlYm91bmNlKHRoaXMuZHJhZ2xlYXZlLCAyNTApLAogICAgICB9LAogICAgICBkcmFnRW50ZXI6IGZhbHNlLAogICAgICBleHRlbnNpb25MaXN0OiB7CiAgICAgICAgbm9ybWFsOiBbImRvYyIsICJwZGYiLCAieGxzIl0sCiAgICAgICAgdmlkZW86IFsiZmx2IiwgIm1vdiIsICJ3ZWJtIiwgIm1rdiIsICJhdmkiLCAid212IiwgIm1wNCJdLAogICAgICB9LAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB3cmFwcGVyQ2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkaXNhYmxlZDogdGhpcy5kaXNhYmxlZCwKICAgICAgfTsKICAgIH0sCiAgICBjbGFzc2VzKCkgewogICAgICByZXR1cm4gewogICAgICAgIFtgdXBsb2FkZXItLSR7dGhpcy50eXBlfWBdOiB0cnVlLAogICAgICAgICJ1cGxvYWRlci0tZHJhZ2dpbmciOiB0aGlzLmRyYWdFbnRlciwKICAgICAgICAidXBsb2FkZXItLWxvYWRpbmciOiB0aGlzLmxvYWRpbmcsCiAgICAgICAgInVwbG9hZGVyLS1maWxlLWxpc3QiOiB0aGlzLmZpbGVzLmxlbmd0aCwKICAgICAgfTsKICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgZmlsZXMoZmlsZXMpIHsKICAgICAgLy8gY29uc29sZS5sb2coZmlsZXMsICJ1cGxvYWRlciIpOwogICAgICB0aGlzLiRlbWl0KCJmaWxlcyIsIGZpbGVzKTsKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkge30sCiAgbWV0aG9kczogewogICAgZHJhZ292ZXIoKSB7CiAgICAgIHRoaXMuZHJhZ0VudGVyID0gdHJ1ZTsKICAgIH0sCiAgICBkcmFnbGVhdmUoKSB7CiAgICAgIHRoaXMuZHJhZ0VudGVyID0gZmFsc2U7CiAgICB9LAogICAgYWRkSW1hZ2VTb3VyY2UoZmlsZUxpc3QpIHsKICAgICAgcmV0dXJuIGZpbGVMaXN0Lm1hcCgoZmlsZSkgPT4gewogICAgICAgIGNvbnN0IGV4dCA9IGZpbGUubmFtZS5zcGxpdCgiLiIpLnBvcCgpOwogICAgICAgIGxldCBpY29uID0gbnVsbDsKICAgICAgICBpZiAoIWZpbGUudHlwZS5zdGFydHNXaXRoKCJpbWFnZS8iKSkgewogICAgICAgICAgaWYgKHRoaXMuZXh0ZW5zaW9uTGlzdC5ub3JtYWwuaW5jbHVkZXMoZXh0KSkgewogICAgICAgICAgICBpY29uID0gYC9hc3NldHMvaWNvbnMvZmlsZS8ke2V4dH0uc3ZnYDsKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5leHRlbnNpb25MaXN0LnZpZGVvLmluY2x1ZGVzKGV4dCkpIHsKICAgICAgICAgICAgaWNvbiA9ICIvYXNzZXRzL2ljb25zL2ZpbGUvdmlkZW8uc3ZnIjsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGljb24gPSAiL2Fzc2V0cy9pY29ucy9maWxlL3Vua25vd24uc3ZnIjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgc2l6ZTogZmlsZS5zaXplLAogICAgICAgICAgICBuYW1lOiBmaWxlLm5hbWUsCiAgICAgICAgICAgIHR5cGU6IGZpbGUudHlwZSwKICAgICAgICAgICAgZXh0LAogICAgICAgICAgICBpY29uLAogICAgICAgICAgfSwKICAgICAgICAgIHNyYzogVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKSwKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBvbkNoYW5nZShnZXRDbGlja2VkKSB7CiAgICAgIGxldCBmaWxlcyA9IFtdOwogICAgICBpZiAoZ2V0Q2xpY2tlZCkgewogICAgICAgIGZpbGVzID0gWy4uLmdldENsaWNrZWQudGFyZ2V0LmZpbGVzXTsKCiAgICAgIH0gZWxzZSB7CiAgICAgICAgZmlsZXMgPSBbLi4udGhpcy4kcmVmc1tgJHt0aGlzLm5hbWV9LWZpbGVgXS5maWxlc10KCiAgICAgIH0KCgoKICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDApIHsKICAgICAgICBpZiAodGhpcy5tdWx0aXBsZSkgewogICAgICAgICAgdGhpcy5maWxlcy5wdXNoKC4uLnRoaXMuYWRkSW1hZ2VTb3VyY2UoWy4uLmZpbGVzXSkpOwogICAgICAgICAgLy8gdGhpcy5maWxlcyA9IHRoaXMuYWRkSW1hZ2VTb3VyY2UoWy4uLmZpbGVzXSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5maWxlcyA9IHRoaXMuYWRkSW1hZ2VTb3VyY2UoW2ZpbGVzWzBdXSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZmlsZXMgPSBbXTsKICAgICAgfQoKICAgICAgdGhpcy5kcmFnRW50ZXIgPSBmYWxzZTsKICAgIH0sCiAgICBkcm9wKGV2ZW50KSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuJHJlZnNbYCR7dGhpcy5uYW1lfS1maWxlYF0uZmlsZXMgPSBldmVudC5kYXRhVHJhbnNmZXIuZmlsZXM7CiAgICAgIHRoaXMub25DaGFuZ2UoKTsKICAgIH0sCiAgICByZW1vdmUoaSkgewogICAgICB0aGlzLmZpbGVzLnNwbGljZShpLCAxKTsKICAgIH0sCiAgICBodW1hbkZpbGVTaXplKGJ5dGVzLCBkcCA9IDEpIHsKICAgICAgY29uc3QgdGhyZXNoID0gMTAwMDsKCiAgICAgIGlmIChNYXRoLmFicyhieXRlcykgPCB0aHJlc2gpIHsKICAgICAgICByZXR1cm4gYCR7Ynl0ZXN9IEJgOwogICAgICB9CgogICAgICBjb25zdCB1bml0cyA9IFsiS2IiLCAiTWIiLCAiR2IiLCAiVGIiLCAiUGIiLCAiRWIiLCAiWmIiLCAiWWIiXTsKICAgICAgbGV0IHUgPSAtMTsKICAgICAgY29uc3QgciA9IDEwICoqIGRwOwoKICAgICAgZG8gewogICAgICAgIGJ5dGVzIC89IHRocmVzaDsKICAgICAgICB1ICs9IDE7CiAgICAgIH0gd2hpbGUgKAogICAgICAgIE1hdGgucm91bmQoTWF0aC5hYnMoYnl0ZXMpICogcikgLyByID49IHRocmVzaCAmJgogICAgICAgIHUgPCB1bml0cy5sZW5ndGggLSAxCiAgICAgICk7CgogICAgICByZXR1cm4gYCR7Ynl0ZXMudG9GaXhlZChkcCl9ICR7dW5pdHNbdV19YDsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ui-kit/Uploader","sourcesContent":["<template>\n  <div :class=\"{ ...wrapperClasses }\" class=\"upluaderPosition\">\n    <div class=\"uploader \" :class=\"classes\">\n      <div class=\"uploader__wrapper  \">\n        <span\n          v-cloak\n          :ref=\"`${name}-file`\"\n          class=\"uploader__container uploader__\"\n          tabindex=\"0\"\n          @dragover.prevent=\"debounced.dragover\"\n          @dragleave.prevent=\"debounced.dragleave\"\n          @dragenter.prevent\n          @dragstart.prevent\n          @drop=\"drop\"\n        >\n          <span v-show=\"loading\" class=\"uploader__loading\">\n            <loader\n              class=\"uploader__loading--bar\"\n              type=\"finitive\"\n              :total=\"loaderTotal\"\n              :loaded=\"loaderLoaded\"\n              :hide-text=\"type === 'horizontal'\"\n              :only-percentage=\"type === 'vertical'\"\n            />\n          </span>\n          <span v-if=\"files.length\" class=\"uploader__files\">\n            <span v-for=\"(file, i) in files\" :key=\"i\" class=\"uploader__file\">\n              <span class=\"uploader__file--cover\">\n                <img\n                  v-if=\"file.data.icon\"\n                  :src=\"file.data.icon\"\n                  :alt=\"file.data.name\"\n                />\n                <img v-else :src=\"file.src\" :alt=\"file.data.name\" />\n              </span>\n              <span class=\"uploader__file--container\">\n                <span class=\"uploader__file--content\">\n                  <span class=\"uploader__file--content-name\">\n                    {{ file.data.name }}\n                  </span>\n                  <span class=\"uploader__file--content-size\">\n                    {{ humanFileSize(file.data.size) }}\n                  </span>\n                </span>\n                <fp-icon circle type=\"link\" icon=\"close\" @click=\"remove(file)\">\n                </fp-icon>\n              </span>\n            </span>\n          </span>\n          <label>\n            <input\n              :ref=\"`${name}-file-input`\"\n              type=\"file\"\n              :name=\"name\"\n              :multiple=\"multiple\"\n              :accept=\"accept\"\n              @change=\"onChange\"\n            />\n            <span class=\"uploader__input\">\n              <span\n                v-show=\"dragEnter\"\n                data-here\n                class=\"uploader__input--drop-here\"\n              >\n                <span>Drop file now</span>\n              </span>\n              <fp-icon\n                name=\"file-upload\"\n                @click=\"$refs[`${name}-file-input`].click()\"\n              >\n              </fp-icon>\n              <span class=\"uploader__input--drag-text\">\n                <template v-if=\"type === 'horizontal'\"\n                  >Drag files here</template\n                >\n                <template v-else\n                  >Choose a file or drag it here\n                  <div>\n                    We require both front and back page of the car papers\n                  </div>\n                 \n                  <div>\n                    Supported Types: JPG, PNG .Max Size : 20MB\n                  </div>\n                </template>\n              </span>\n              <!-- <span class=\"uploader__input--or-text\">or</span> -->\n            </span>\n          </label>\n          <span v-if=\"$scopedSlots.info\" class=\"uploader__info\">\n            <slot name=\"info\" />\n          </span>\n<!--          <About :imageData=\"this.imageData\"></About>-->\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport \"../../../assets/scss/uploader.scss\";\nimport Loader from \"../Loader/index.vue\";\nimport fpIcon from \"../Icon/index.vue\";\nimport About from '../../../views/About'\nimport { stringify } from \"querystring\";\n\nconst debounce = require(\"lodash.debounce\");\n\nexport default {\n  name: \"fpUploader\",\n\n\n  components: {\n    Loader,\n    fpIcon,\n    About\n  },\n  props: {\n    name: {\n      type: String,\n      default: \"uploader\",\n    },\n    type: {\n      type: String,\n      default: \"horizontal\",\n      validator(value) {\n        return [\"horizontal\", \"vertical\"].indexOf(value) !== -1;\n      },\n    },\n    disabled: {\n      type: Boolean,\n    },\n    loading: {\n      type: Boolean,\n    },\n    loaderTotal: {\n      type: Number,\n      default: 0,\n    },\n    loaderLoaded: {\n      type: Number,\n      default: 0,\n    },\n    accept: {\n      type: String,\n      default: \"*\",\n    },\n    acceptImage:{\n      type: stringify,\n      default: \"image/jpeg\t\"\n    },\n    multiple: {\n      type: Boolean,\n    },\n  },\n  data() {\n    return {\n      files: [],\n      imageData:null,\n      debounced: {\n        dragover: debounce(this.dragover),\n        dragleave: debounce(this.dragleave, 250),\n      },\n      dragEnter: false,\n      extensionList: {\n        normal: [\"doc\", \"pdf\", \"xls\"],\n        video: [\"flv\", \"mov\", \"webm\", \"mkv\", \"avi\", \"wmv\", \"mp4\"],\n      },\n    };\n  },\n  computed: {\n    wrapperClasses() {\n      return {\n        disabled: this.disabled,\n      };\n    },\n    classes() {\n      return {\n        [`uploader--${this.type}`]: true,\n        \"uploader--dragging\": this.dragEnter,\n        \"uploader--loading\": this.loading,\n        \"uploader--file-list\": this.files.length,\n      };\n    },\n  },\n  watch: {\n    files(files) {\n      // console.log(files, \"uploader\");\n      this.$emit(\"files\", files);\n    },\n  },\n  created() {},\n  methods: {\n    dragover() {\n      this.dragEnter = true;\n    },\n    dragleave() {\n      this.dragEnter = false;\n    },\n    addImageSource(fileList) {\n      return fileList.map((file) => {\n        const ext = file.name.split(\".\").pop();\n        let icon = null;\n        if (!file.type.startsWith(\"image/\")) {\n          if (this.extensionList.normal.includes(ext)) {\n            icon = `/assets/icons/file/${ext}.svg`;\n          } else if (this.extensionList.video.includes(ext)) {\n            icon = \"/assets/icons/file/video.svg\";\n          } else {\n            icon = \"/assets/icons/file/unknown.svg\";\n          }\n        }\n        return {\n          data: {\n            size: file.size,\n            name: file.name,\n            type: file.type,\n            ext,\n            icon,\n          },\n          src: URL.createObjectURL(file),\n        };\n      });\n    },\n    onChange(getClicked) {\n      let files = [];\n      if (getClicked) {\n        files = [...getClicked.target.files];\n\n      } else {\n        files = [...this.$refs[`${this.name}-file`].files]\n\n      }\n\n\n\n      if (files.length > 0) {\n        if (this.multiple) {\n          this.files.push(...this.addImageSource([...files]));\n          // this.files = this.addImageSource([...files])\n        } else {\n          this.files = this.addImageSource([files[0]]);\n        }\n      } else {\n        this.files = [];\n      }\n\n      this.dragEnter = false;\n    },\n    drop(event) {\n      event.preventDefault();\n      this.$refs[`${this.name}-file`].files = event.dataTransfer.files;\n      this.onChange();\n    },\n    remove(i) {\n      this.files.splice(i, 1);\n    },\n    humanFileSize(bytes, dp = 1) {\n      const thresh = 1000;\n\n      if (Math.abs(bytes) < thresh) {\n        return `${bytes} B`;\n      }\n\n      const units = [\"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"];\n      let u = -1;\n      const r = 10 ** dp;\n\n      do {\n        bytes /= thresh;\n        u += 1;\n      } while (\n        Math.round(Math.abs(bytes) * r) / r >= thresh &&\n        u < units.length - 1\n      );\n\n      return `${bytes.toFixed(dp)} ${units[u]}`;\n    },\n  },\n};\n</script>\n"]}]}